import java.io.*;
import java.util.*;

public class Main {

    public static void main(String[] args) throws Exception {
    Scanner sc=new Scanner(System.in);
    int n=sc.nextInt();
    int m=sc.nextInt();
    ArrayList<String> jmpaths=getMazePaths(1,1,n,m);
    System.out.println(jmpaths);
    }

    // sr - source row
    // sc - source column
    // dr - destination row
    // dc - destination column
    public static ArrayList<String> getMazePaths(int sr, int sc, int dr, int dc) {
        
        if(sr==dr && sc==dc)
        {
            ArrayList<String> bres=new ArrayList<>();
            bres.add("");
            return bres;
        }
        else if(sr>dr || sc>dc)
        {
            ArrayList<String>bres=new ArrayList<>();
            return bres;
        }
        ArrayList<String> paths=new ArrayList<>();
    // horizontal paths
    
    for(int ms=1;ms<=dc-sc;ms++)
    {
       ArrayList<String> hpaths=getMazePaths(sr,sc+ms,dr,dc);
       for(String hpath:hpaths)
       {
           paths.add("h"+ms+hpath);
       }
    }
    
    //vertical paths
     for(int ms=1;ms<=dr-sr;ms++)
    {
       ArrayList<String> vpaths=getMazePaths(sr+ms,sc,dr,dc);
       for(String vpath:vpaths)
       {
           paths.add("v"+ms+vpath);
       }
    }
    
    
     for(int vms=1; vms<=dr-sr && vms<=dc-sc; vms++)
     {
         ArrayList<String> dpaths= getMazePaths(sr+vms,sc+vms,dr,dc);
         for(String dpath:dpaths)
         {
            paths.add("d"+vms+dpath); 
         }
     }
     return paths;
    
    
    }

}
